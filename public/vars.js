function htmlToElement(html) {
	const template = document.createElement('template');
	html = html.trim(); // Never return a text node of whitespace as the result
	template.innerHTML = html;
	return template.content.firstChild;
}

const evaluate_wrapper = ["<div class=\"line\"><span style=\"color: #569CD6\">function</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>evaluate</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>): </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">evaluate</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>type</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;> = {}</span></span></code></pre>\">State</data-lsp></span><span style=\"color: #D4D4D4\">) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">}</span></div>"].map(htmlToElement);

const evaluate = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>var</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>Math</span></span></code></pre>\">Math</data-lsp></span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>method</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #4EC9B0&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>.</span><span style=&quot;color: #DCDCAA&quot;>floor</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>x</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>): </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">floor</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>var</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>Math</span></span></code></pre>\">Math</data-lsp></span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>method</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #4EC9B0&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>.</span><span style=&quot;color: #DCDCAA&quot;>random</span><span style=&quot;color: #D4D4D4&quot;>(): </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">random</data-lsp></span><span style=\"color: #D4D4D4\">() * </span><span style=\"color: #B5CEA8\">201</span><span style=\"color: #D4D4D4\">) - </span><span style=\"color: #B5CEA8\">100</span><span style=\"color: #D4D4D4\">;</span></div>"].map(htmlToElement);

const terminal_wrapper = ["<div class=\"line\">&nbsp;</div>","<div class=\"line\"><span style=\"color: #569CD6\">function</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>isTerminalState</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>): </span><span style=&quot;color: #4EC9B0&quot;>boolean</span></span></code></pre>\">isTerminalState</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>type</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;> = {}</span></span></code></pre>\">State</data-lsp></span><span style=\"color: #D4D4D4\">) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">}</span></div>"].map(htmlToElement);

const terminal = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>var</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>Math</span></span></code></pre>\">Math</data-lsp></span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>method</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #4EC9B0&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>.</span><span style=&quot;color: #DCDCAA&quot;>random</span><span style=&quot;color: #D4D4D4&quot;>(): </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">random</data-lsp></span><span style=\"color: #D4D4D4\">() &gt; </span><span style=\"color: #B5CEA8\">0.7</span><span style=\"color: #D4D4D4\"> ? </span><span style=\"color: #569CD6\">true</span><span style=\"color: #D4D4D4\"> : </span><span style=\"color: #569CD6\">false</span><span style=\"color: #D4D4D4\">;</span></div>"].map(htmlToElement);

const children_wrapper = ["<div class=\"line\">&nbsp;</div>","<div class=\"line\"><span style=\"color: #569CD6\">function</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>generateChildStates</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>): {}[]</span></span></code></pre>\">generateChildStates</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>type</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;> = {}</span></span></code></pre>\">State</data-lsp></span><span style=\"color: #D4D4D4\">) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">}</span></div>"].map(htmlToElement);

const children = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> [{}, {}];</span></div>"].map(htmlToElement);

const main_wrapper = ["<div class=\"line\">&nbsp;</div>","<div class=\"line\"><span style=\"color: #569CD6\">function</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>minimax</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>depth</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>maximizingPlayer</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>boolean</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>): </span><span style=&quot;color: #4EC9B0&quot;>MinimaxNode</span></span></code></pre>\">minimax</data-lsp></span><span style=\"color: #D4D4D4\">(</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>type</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;> = {}</span></span></code></pre>\">State</data-lsp></span><span style=\"color: #D4D4D4\">,</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>depth</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">depth</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\">number</span><span style=\"color: #D4D4D4\">,</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>maximizingPlayer</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>boolean</span></span></code></pre>\">maximizingPlayer</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\">boolean</span><span style=\"color: #D4D4D4\">,</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">alpha</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\">number</span><span style=\"color: #D4D4D4\">,</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">beta</data-lsp></span><span style=\"color: #D4D4D4\">: </span><span style=\"color: #4EC9B0\">number</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">): </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>type</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #4EC9B0&quot;>MinimaxNode</span><span style=&quot;color: #D4D4D4&quot;> = {</span></span>\n<span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>    </span><span style=&quot;color: #9CDCFE&quot;>move</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>;</span></span>\n<span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>    </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>;</span></span>\n<span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>}</span></span></code></pre>\">MinimaxNode</data-lsp></span><span style=\"color: #D4D4D4\"> {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">}</span></div>"].map(htmlToElement);

const exit_block = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>depth</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">depth</data-lsp></span><span style=\"color: #D4D4D4\"> === </span><span style=\"color: #B5CEA8\">0</span><span style=\"color: #D4D4D4\"> || </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>isTerminalState</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>): </span><span style=&quot;color: #4EC9B0&quot;>boolean</span></span></code></pre>\">isTerminalState</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">)) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> {</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>property</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>move</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">move</data-lsp>:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>property</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">eval</data-lsp>:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>evaluate</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>): </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">evaluate</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">)}</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t}</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span></div>"].map(htmlToElement);

const if_stmt = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t</span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>maximizingPlayer</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>boolean</span></span></code></pre>\">maximizingPlayer</data-lsp></span><span style=\"color: #D4D4D4\">) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t} </span><span style=\"color: #C586C0\">else</span><span style=\"color: #D4D4D4\"> {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t}</span></div>"].map(htmlToElement);

const maximizing_initvals = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #569CD6\">let</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>maxEval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">maxEval</data-lsp></span><span style=\"color: #D4D4D4\"> = -</span><span style=\"color: #569CD6\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>var</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>Infinity</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">Infinity</data-lsp></span><span style=\"color: #D4D4D4\">;</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #569CD6\">let</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>bestMove</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span></span></code></pre>\">bestMove</data-lsp></span><span style=\"color: #D4D4D4\">!: </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>type</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;> = {}</span></span></code></pre>\">State</data-lsp></span><span style=\"color: #D4D4D4\">;</span></div>"].map(htmlToElement);

const maximizing_loop = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #C586C0\">for</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #569CD6\">let</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>childState</span><span style=&quot;color: #D4D4D4&quot;>: {}</span></span></code></pre>\">childState</data-lsp></span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">of</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>generateChildStates</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>): {}[]</span></span></code></pre>\">generateChildStates</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">)) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t}</span></div>"].map(htmlToElement);

const maximizing_logic = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span><span style=\"color: #569CD6\">let</span><span style=\"color: #D4D4D4\"> {</span><span style=\"color: #9CDCFE\"><data-err><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">eval</data-lsp></data-err></span><span style=\"color: #D4D4D4\">} = </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>minimax</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>depth</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>maximizingPlayer</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>boolean</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>): </span><span style=&quot;color: #4EC9B0&quot;>MinimaxNode</span></span></code></pre>\">minimax</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>childState</span><span style=&quot;color: #D4D4D4&quot;>: {}</span></span></code></pre>\">childState</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>depth</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">depth</data-lsp></span><span style=\"color: #D4D4D4\"> - </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #569CD6\">false</span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">alpha</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">beta</data-lsp></span><span style=\"color: #D4D4D4\">);</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">eval</data-lsp></span><span style=\"color: #D4D4D4\"> &gt; </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>maxEval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">maxEval</data-lsp></span><span style=\"color: #D4D4D4\">) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>maxEval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">maxEval</data-lsp></span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">eval</data-lsp></span><span style=\"color: #D4D4D4\">;</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>bestMove</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span></span></code></pre>\">bestMove</data-lsp></span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>childState</span><span style=&quot;color: #D4D4D4&quot;>: {}</span></span></code></pre>\">childState</data-lsp></span><span style=\"color: #D4D4D4\">;</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t}</span></div>"].map(htmlToElement);

const maximizing_alphabeta = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">alpha</data-lsp></span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>var</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>Math</span></span></code></pre>\">Math</data-lsp></span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>method</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #4EC9B0&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>.</span><span style=&quot;color: #DCDCAA&quot;>max</span><span style=&quot;color: #D4D4D4&quot;>(...</span><span style=&quot;color: #9CDCFE&quot;>values</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>[]): </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">max</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">alpha</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">eval</data-lsp></span><span style=\"color: #D4D4D4\">);</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">beta</data-lsp></span><span style=\"color: #D4D4D4\"> &lt;= </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">alpha</data-lsp></span><span style=\"color: #D4D4D4\">) </span><span style=\"color: #C586C0\">break</span><span style=\"color: #D4D4D4\">;</span></div>"].map(htmlToElement);

const maximizing_return = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> {</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>property</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>move</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">move</data-lsp>:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>bestMove</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span></span></code></pre>\">bestMove</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>property</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">eval</data-lsp>:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>maxEval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">maxEval</data-lsp></span><span style=\"color: #D4D4D4\">};</span></div>"].map(htmlToElement);

const minimizing_initvals = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #569CD6\">let</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>minEval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">minEval</data-lsp></span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #569CD6\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>var</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>Infinity</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">Infinity</data-lsp></span><span style=\"color: #D4D4D4\">;</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #569CD6\">let</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>bestMove</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span></span></code></pre>\">bestMove</data-lsp></span><span style=\"color: #D4D4D4\">!: </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>type</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;> = {}</span></span></code></pre>\">State</data-lsp></span><span style=\"color: #D4D4D4\">;</span></div>"].map(htmlToElement);

const minimizing_loop = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #C586C0\">for</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #569CD6\">let</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>childState</span><span style=&quot;color: #D4D4D4&quot;>: {}</span></span></code></pre>\">childState</data-lsp></span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #569CD6\">of</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>generateChildStates</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>): {}[]</span></span></code></pre>\">generateChildStates</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">state</data-lsp></span><span style=\"color: #D4D4D4\">)) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t}</span></div>"].map(htmlToElement);

const minimizing_logic = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span><span style=\"color: #569CD6\">let</span><span style=\"color: #D4D4D4\"> {</span><span style=\"color: #9CDCFE\"><data-err><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">eval</data-lsp></data-err></span><span style=\"color: #D4D4D4\">} = </span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>function</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #DCDCAA&quot;>minimax</span><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>state</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>depth</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>maximizingPlayer</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>boolean</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>, </span><span style=&quot;color: #9CDCFE&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>): </span><span style=&quot;color: #4EC9B0&quot;>MinimaxNode</span></span></code></pre>\">minimax</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>childState</span><span style=&quot;color: #D4D4D4&quot;>: {}</span></span></code></pre>\">childState</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>depth</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">depth</data-lsp></span><span style=\"color: #D4D4D4\"> - </span><span style=\"color: #B5CEA8\">1</span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #569CD6\">true</span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">alpha</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">beta</data-lsp></span><span style=\"color: #D4D4D4\">);</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">eval</data-lsp></span><span style=\"color: #D4D4D4\"> &lt; </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>minEval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">minEval</data-lsp></span><span style=\"color: #D4D4D4\">) {</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>minEval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">minEval</data-lsp></span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">eval</data-lsp></span><span style=\"color: #D4D4D4\">;</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>bestMove</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span></span></code></pre>\">bestMove</data-lsp></span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>childState</span><span style=&quot;color: #D4D4D4&quot;>: {}</span></span></code></pre>\">childState</data-lsp></span><span style=\"color: #D4D4D4\">;</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t}</span></div>"].map(htmlToElement);

const minimizing_alphabeta = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">beta</data-lsp></span><span style=\"color: #D4D4D4\"> = </span><span style=\"color: #4EC9B0\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>var</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>Math</span></span></code></pre>\">Math</data-lsp></span><span style=\"color: #D4D4D4\">.</span><span style=\"color: #DCDCAA\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>method</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #4EC9B0&quot;>Math</span><span style=&quot;color: #D4D4D4&quot;>.</span><span style=&quot;color: #DCDCAA&quot;>min</span><span style=&quot;color: #D4D4D4&quot;>(...</span><span style=&quot;color: #9CDCFE&quot;>values</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span><span style=&quot;color: #D4D4D4&quot;>[]): </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">min</data-lsp></span><span style=\"color: #D4D4D4\">(</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">beta</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">eval</data-lsp></span><span style=\"color: #D4D4D4\">);</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t\t</span><span style=\"color: #C586C0\">if</span><span style=\"color: #D4D4D4\"> (</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>beta</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">beta</data-lsp></span><span style=\"color: #D4D4D4\"> &lt;= </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>parameter</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>alpha</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">alpha</data-lsp></span><span style=\"color: #D4D4D4\">) </span><span style=\"color: #C586C0\">break</span><span style=\"color: #D4D4D4\">;</span></div>"].map(htmlToElement);

const minimizing_return = ["<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span></div>","<div class=\"line\"><span style=\"color: #D4D4D4\">\t\t</span><span style=\"color: #C586C0\">return</span><span style=\"color: #D4D4D4\"> {</span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>property</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>move</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>State</span></span></code></pre>\">move</data-lsp>:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>bestMove</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>State</span></span></code></pre>\">bestMove</data-lsp></span><span style=\"color: #D4D4D4\">, </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #D4D4D4&quot;>(</span><span style=&quot;color: #9CDCFE&quot;>property</span><span style=&quot;color: #D4D4D4&quot;>) </span><span style=&quot;color: #C8C8C8&quot;>eval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #9CDCFE&quot;>number</span></span></code></pre>\">eval</data-lsp>:</span><span style=\"color: #D4D4D4\"> </span><span style=\"color: #9CDCFE\"><data-lsp lsp=\"<pre class=&quot;shiki&quot; style=&quot;background-color: #1E1E1E&quot;><code><span class=&quot;line&quot;><span style=&quot;color: #569CD6&quot;>let</span><span style=&quot;color: #D4D4D4&quot;> </span><span style=&quot;color: #9CDCFE&quot;>minEval</span><span style=&quot;color: #D4D4D4&quot;>: </span><span style=&quot;color: #4EC9B0&quot;>number</span></span></code></pre>\">minEval</data-lsp></span><span style=\"color: #D4D4D4\">};</span></div>"].map(htmlToElement);

const init = [].map(htmlToElement);

const steps = [
	{
		forward: async () => {
			
		},
		backward: async () => {
			
		}
	},
{
		forward: async () => {
			await pushLines(0, evaluate_wrapper)
		},
		backward: async () => {
			await removeLine(1, 2)
		}
	},
{
		forward: async () => {
			await pushLines(1, evaluate)
		},
		backward: async () => {
			await removeLine(2)
		}
	},
{
		forward: async () => {
			await pushLines(3, terminal_wrapper)
		},
		backward: async () => {
			await removeLine(4, 5, 6)
		}
	},
{
		forward: async () => {
			await pushLines(5, terminal)
		},
		backward: async () => {
			await removeLine(6)
		}
	},
];

const docsCode = "<div id=\"docs\"><p id=p1>Welcome to the minimax tutorial! In this tutorial, you will learn how to create your own version of the minimax algorithm, along with alpha-beta pruning</p><p id=p2>Before we write the function, there are some prerequisites.</p><p id=p3>First one is the evaluate function, which takes a game board and evaluates how good that position is based on some heuristic</p><p id=p4>For our example, we will write a dummy evaluator. In real code you should replace this with an actual evaluator</p><p id=p5>The next prerequisite is a function to check if our game is over. When the game is over, we should stop checking further game positions.</p><p id=p6>Once again, we write a dummy function</p></div>";